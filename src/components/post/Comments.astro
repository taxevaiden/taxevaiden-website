---
import MainDiv from "../main/MainDiv.astro";
import Card from "../Card.astro";

import { WORKER_URL } from "astro:env/client";

const referer = Astro.request.headers.get("Referer");
const url = new URL(referer);

console.log(url.href);

//comments

const commentsResponse = await fetch(`${WORKER_URL}${url.pathname}`);

const commentsJSON = await commentsResponse.json();

const comments = await JSON.parse(commentsJSON).comments; //aaa

const sortedComments = comments.sort((a, b) => b.date - a.date);

const formatter = new Intl.DateTimeFormat("en-CA", {
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
});

function formatDateToYYYYMMDD(date) {
    return formatter.format(date).replace(/\//g, "-"); // Replace slashes with hyphens
}

const formattedComments = sortedComments.map((comment) => ({
    ...comment,
    date: formatDateToYYYYMMDD(new Date(Number(comment.date))), // Convert milliseconds to a Date object
}));

console.log(formattedComments);
---

<MainDiv>
    <h1 id="comments">comments</h1>

    <form id="commentForm" class="space-y-6 mb-8">
        <div>
            <label for="name" class="block text-sm text-default-text2"
                >name:</label
            >
            <input
                type="text"
                id="name"
                name="name"
                required
                class="w-full p-3 shadow-d text-black"
            />
        </div>

        <div>
            <label for="content" class="block text-sm text-default-text2"
                >comment:</label
            >
            <textarea
                id="content"
                name="content"
                required
                rows="4"
                class="w-full p-3 shadow-d text-black"></textarea>
        </div>

        <div>
            <button
                type="submit"
                class="w-full px-6 py-3 bg-default-div shadow-d"
            >
                submit
            </button>
        </div>
    </form>

    <div id="commentsDiv">
        {
            formattedComments.map((comment) => (
                <Card
                    title={comment.name}
                    description={comment.content}
                    date={comment.date}
                />
            ))
        }
    </div>
</MainDiv>

<script>
    import { WORKER_URL } from "astro:env/client";

    // Function to handle form submission
    async function submitComment(event) {
        event.preventDefault(); // Prevent the form from reloading the page

        const today = new Date();

        // Get the form data
        const formData = new FormData(event.target);
        const comment = {
            name: formData.get("name"),
            content: formData.get("content"),
            date: today.getTime().toString(), // Use current date in ISO format
        };

        try {
            // Send the comment to the worker
            const response = await fetch(
                `${WORKER_URL}${window.location.pathname}`,
                {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(comment),
                },
            );

            // Handle the response
            const data = await response.json();
            if (response.ok) {
                console.log("Comment submitted:", data);
                alert("Your comment has been submitted successfully!");
                window.location.reload();
                document.getElementById("commentsDiv").scrollIntoView();
            } else {
                console.error("Error submitting comment:", data.error);
                alert("Failed to submit comment: " + data.error);
            }
        } catch (error) {
            console.error("Error:", error);
            alert("An error occurred while submitting your comment.");
        }
    }

    // Attach the submit handler to the form
    document
        .getElementById("commentForm")
        .addEventListener("submit", submitComment);
</script>
